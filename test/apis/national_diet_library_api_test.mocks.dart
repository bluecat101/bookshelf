// Mocks generated by Mockito 5.4.5 from annotations
// in bookshelf/test/apis/national_diet_library_api_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:bookshelf/helper/image.dart' as _i3;
import 'package:flutter/cupertino.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeImageProvider_0<T extends Object> extends _i1.SmartFake
    implements _i2.ImageProvider<T> {
  _FakeImageProvider_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ImageHelperImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageHelperImpl extends _i1.Mock implements _i3.ImageHelperImpl {
  MockImageHelperImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> existUrl(String? url) => (super.noSuchMethod(
        Invocation.method(
          #existUrl,
          [url],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i2.ImageProvider<Object> createNetworkImage(String? url) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNetworkImage,
          [url],
        ),
        returnValue: _FakeImageProvider_0<Object>(
          this,
          Invocation.method(
            #createNetworkImage,
            [url],
          ),
        ),
      ) as _i2.ImageProvider<Object>);
}
